{
	"id": 0,
	"name": "PrimeNG",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"comment": {
		"summary": [
			{
				"kind": "text",
				"text": "Panel is a container with the optional content toggle feature.\n\n[Live Demo](https://www.primeng.org/panel/)"
			}
		]
	},
	"children": [
		{
			"id": 1,
			"name": "PanelToggleEvent",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 2,
					"name": "originalEvent",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
							"qualifiedName": "Event"
						},
						"name": "Event",
						"package": "typescript"
					}
				},
				{
					"id": 3,
					"name": "collapsed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						2,
						3
					]
				}
			]
		},
		{
			"id": 4,
			"name": "Panel",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 8,
					"name": "toggleable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines if content of panel can be expanded and collapsed."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 9,
					"name": "header",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Header text of the panel."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10,
					"name": "collapsed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the initial state of panel content, supports one or two-way binding as well."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 11,
					"name": "style",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Inline style of the component."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 12,
					"name": "styleClass",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Style class of the component."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13,
					"name": "iconPos",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Position of the icons."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "center"
							},
							{
								"type": "literal",
								"value": "end"
							},
							{
								"type": "literal",
								"value": "start"
							}
						]
					},
					"defaultValue": "'end'"
				},
				{
					"id": 14,
					"name": "expandIcon",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Expand icon of the toggle button."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15,
					"name": "collapseIcon",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Collapse icon of the toggle button."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16,
					"name": "showHeader",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies if header of panel cannot be displayed."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "true"
				},
				{
					"id": 17,
					"name": "toggler",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies the toggler element to toggle the panel content."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "header"
							},
							{
								"type": "literal",
								"value": "icon"
							}
						]
					},
					"defaultValue": "'icon'"
				},
				{
					"id": 18,
					"name": "collapsedChange",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Emits when the collapsed state changes."
							}
						],
						"blockTags": [
							{
								"tag": "@param",
								"name": "boolean",
								"content": [
									{
										"kind": "text",
										"text": "value - New value."
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/@angular/core/index.d.ts",
							"qualifiedName": "EventEmitter"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "EventEmitter",
						"package": "@angular/core"
					},
					"defaultValue": "..."
				},
				{
					"id": 19,
					"name": "onBeforeToggle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Emits before content toggle."
							}
						],
						"blockTags": [
							{
								"tag": "@param",
								"name": "PanelToggleEvent",
								"content": [
									{
										"kind": "text",
										"text": "event"
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/@angular/core/index.d.ts",
							"qualifiedName": "EventEmitter"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 1,
								"name": "PanelToggleEvent",
								"package": "primeng"
							}
						],
						"name": "EventEmitter",
						"package": "@angular/core"
					},
					"defaultValue": "..."
				},
				{
					"id": 20,
					"name": "onAfterToggle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Emits after content toggle."
							}
						],
						"blockTags": [
							{
								"tag": "@param",
								"name": "PanelToggleEvent",
								"content": [
									{
										"kind": "text",
										"text": "event"
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/@angular/core/index.d.ts",
							"qualifiedName": "EventEmitter"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 1,
								"name": "PanelToggleEvent",
								"package": "primeng"
							}
						],
						"name": "EventEmitter",
						"package": "@angular/core"
					},
					"defaultValue": "..."
				},
				{
					"id": 21,
					"name": "transitionOptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Transition options of the animation."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "'400ms cubic-bezier(0.86, 0, 0.07, 1)'"
				},
				{
					"id": 22,
					"name": "footerFacet",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/@angular/core/index.d.ts",
							"qualifiedName": "TemplateRef"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "TemplateRef",
						"package": "@angular/core"
					}
				},
				{
					"id": 23,
					"name": "templates",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/@angular/core/index.d.ts",
							"qualifiedName": "QueryList"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "src/app/components/api/shared.ts",
									"qualifiedName": "PrimeTemplate"
								},
								"name": "PrimeTemplate",
								"package": "primeng"
							}
						],
						"name": "QueryList",
						"package": "@angular/core"
					}
				},
				{
					"id": 24,
					"name": "iconTemplate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Icon template of the header."
							}
						],
						"blockTags": [
							{
								"tag": "@alias",
								"content": [
									{
										"kind": "text",
										"text": "icons"
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/@angular/core/index.d.ts",
							"qualifiedName": "TemplateRef"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "TemplateRef",
						"package": "@angular/core"
					}
				},
				{
					"id": 25,
					"name": "animating",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 26,
					"name": "headerTemplate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@alias",
								"content": [
									{
										"kind": "text",
										"text": "header"
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/@angular/core/index.d.ts",
							"qualifiedName": "TemplateRef"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "TemplateRef",
						"package": "@angular/core"
					}
				},
				{
					"id": 27,
					"name": "contentTemplate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@alias",
								"content": [
									{
										"kind": "text",
										"text": "content"
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/@angular/core/index.d.ts",
							"qualifiedName": "TemplateRef"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "TemplateRef",
						"package": "@angular/core"
					}
				},
				{
					"id": 28,
					"name": "footerTemplate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@alias",
								"content": [
									{
										"kind": "text",
										"text": "footer"
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/@angular/core/index.d.ts",
							"qualifiedName": "TemplateRef"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "TemplateRef",
						"package": "@angular/core"
					}
				},
				{
					"id": 29,
					"name": "headerIconTemplate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Custom toggler icon template of panel."
							}
						],
						"blockTags": [
							{
								"tag": "@alias",
								"content": [
									{
										"kind": "text",
										"text": "headericons"
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/@angular/core/index.d.ts",
							"qualifiedName": "TemplateRef"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "TemplateRef",
						"package": "@angular/core"
					}
				},
				{
					"id": 30,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				},
				{
					"id": 5,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 6,
							"name": "new Panel",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 7,
									"name": "el",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@angular/core/index.d.ts",
											"qualifiedName": "ElementRef"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ElementRef",
										"package": "@angular/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 4,
								"name": "Panel",
								"package": "primeng"
							}
						}
					]
				},
				{
					"id": 31,
					"name": "el",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/@angular/core/index.d.ts",
							"qualifiedName": "ElementRef"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ElementRef",
						"package": "@angular/core"
					}
				},
				{
					"id": 32,
					"name": "ngAfterContentInit",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 33,
							"name": "ngAfterContentInit",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "AfterContentInit.ngAfterContentInit"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "AfterContentInit.ngAfterContentInit"
					}
				},
				{
					"id": 34,
					"name": "onHeaderClick",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 35,
							"name": "onHeaderClick",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 36,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "MouseEvent"
										},
										"name": "MouseEvent",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 37,
					"name": "onIconClick",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 38,
							"name": "onIconClick",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 39,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "MouseEvent"
										},
										"name": "MouseEvent",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 40,
					"name": "toggle",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 41,
							"name": "toggle",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 42,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "MouseEvent"
										},
										"name": "MouseEvent",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					]
				},
				{
					"id": 43,
					"name": "expand",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 44,
							"name": "expand",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 45,
					"name": "collapse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 46,
							"name": "collapse",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 47,
					"name": "getBlockableElement",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 48,
							"name": "getBlockableElement",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLElement"
								},
								"name": "HTMLElement",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "BlockableUI.getBlockableElement"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "BlockableUI.getBlockableElement"
					}
				},
				{
					"id": 49,
					"name": "onToggleDone",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 50,
							"name": "onToggleDone",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 51,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Event"
										},
										"name": "Event",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						5
					]
				},
				{
					"title": "Properties",
					"children": [
						8,
						9,
						10,
						11,
						12,
						13,
						14,
						15,
						16,
						17,
						18,
						19,
						20,
						21,
						22,
						23,
						25,
						30,
						31
					]
				},
				{
					"title": "Methods",
					"children": [
						32,
						34,
						37,
						40,
						43,
						45,
						47,
						49
					]
				},
				{
					"title": "Templates",
					"children": [
						24,
						26,
						27,
						28,
						29
					]
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "node_modules/@angular/core/index.d.ts",
						"qualifiedName": "AfterContentInit"
					},
					"name": "AfterContentInit",
					"package": "@angular/core"
				},
				{
					"type": "reference",
					"target": {
						"sourceFileName": "src/app/components/api/blockableui.ts",
						"qualifiedName": "BlockableUI"
					},
					"name": "BlockableUI",
					"package": "primeng"
				}
			]
		},
		{
			"id": 52,
			"name": "PanelModule",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "**PrimeNG - Panel**\n\n_Panel functionality is integrated within various PrimeReact components._\n\n[Live Demo](https://www.primeng.org/panel/)\n--- ---\n![PrimeNG](https://primefaces.org/cdn/primeng/images/logo-100.png)"
					}
				]
			},
			"children": [
				{
					"id": 53,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 54,
							"name": "new PanelModule",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 52,
								"name": "PanelModule",
								"package": "primeng"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						53
					]
				}
			]
		}
	],
	"groups": [
		{
			"title": "Classes",
			"children": [
				4
			]
		},
		{
			"title": "Interfaces",
			"children": [
				1
			]
		},
		{
			"title": "Component",
			"children": [
				52
			]
		}
	],
	"packageName": "primeng",
	"packageVersion": "15.4.2-SNAPSHOT",
	"readme": [
		{
			"kind": "text",
			"text": "[![npm version](https://badge.fury.io/js/primeng.svg)](https://badge.fury.io/js/primeng)\n[![npm downloads](https://img.shields.io/npm/dm/primeng.svg)](https://www.npmjs.com/package/primeng)\n[![Actions CI](https://github.com/primefaces/primeng/workflows/NodeJS%20CI/badge.svg)](https://github.com/primefaces/primeng/actions/workflows/node.js.yml)\n[![Discord Chat](https://img.shields.io/discord/557940238991753223.svg?color=7289da&label=chat&logo=discord)](https://discord.gg/gzKFYnpmCY)\n\n[![PrimeNG Hero](https://www.primefaces.org/wp-content/uploads/2022/09/primeng-gh-readme.jpg)](https://primeng.org)\n\n### Website\n\nVisit the [PrimeNG Website](https://primeng.org) for general information, demos and documentation."
		}
	],
	"symbolIdMap": {
		"0": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "PanelToggleEvent"
		},
		"2": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "PanelToggleEvent.originalEvent"
		},
		"3": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "PanelToggleEvent.collapsed"
		},
		"4": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel"
		},
		"5": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.__constructor"
		},
		"6": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel"
		},
		"7": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "el"
		},
		"8": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.toggleable"
		},
		"9": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.header"
		},
		"10": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.collapsed"
		},
		"11": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.style"
		},
		"12": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.styleClass"
		},
		"13": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.iconPos"
		},
		"14": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.expandIcon"
		},
		"15": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.collapseIcon"
		},
		"16": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.showHeader"
		},
		"17": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.toggler"
		},
		"18": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.collapsedChange"
		},
		"19": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.onBeforeToggle"
		},
		"20": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.onAfterToggle"
		},
		"21": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.transitionOptions"
		},
		"22": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.footerFacet"
		},
		"23": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.templates"
		},
		"24": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.iconTemplate"
		},
		"25": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.animating"
		},
		"26": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.headerTemplate"
		},
		"27": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.contentTemplate"
		},
		"28": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.footerTemplate"
		},
		"29": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.headerIconTemplate"
		},
		"30": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.id"
		},
		"31": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.el"
		},
		"32": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.ngAfterContentInit"
		},
		"33": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.ngAfterContentInit"
		},
		"34": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.onHeaderClick"
		},
		"35": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.onHeaderClick"
		},
		"36": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "event"
		},
		"37": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.onIconClick"
		},
		"38": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.onIconClick"
		},
		"39": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "event"
		},
		"40": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.toggle"
		},
		"41": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.toggle"
		},
		"42": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "event"
		},
		"43": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.expand"
		},
		"44": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.expand"
		},
		"45": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.collapse"
		},
		"46": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.collapse"
		},
		"47": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.getBlockableElement"
		},
		"48": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.getBlockableElement"
		},
		"49": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.onToggleDone"
		},
		"50": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "Panel.onToggleDone"
		},
		"51": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "event"
		},
		"52": {
			"sourceFileName": "src/app/components/panel/panel.ts",
			"qualifiedName": "PanelModule"
		}
	}
}